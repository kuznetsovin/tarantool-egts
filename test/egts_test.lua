#!/usr/bin/env tarantool

local egts = require('egts')
local fiber = require('fiber')
local socket = require('socket')


local message = string.char(0x01, 0x00, 0x03, 0x0B, 0x00, 0x23, 0x00, 0x8A, 0x00, 0x01, 0x49, 0x18, 0x00, 0x61,
		0x00, 0x99, 0xB0, 0x09, 0x02, 0x00, 0x02, 0x02, 0x10, 0x15, 0x00, 0xD5, 0x3F, 0x01, 0x10, 0x6F, 0x1C, 0x05, 0x9E,
		0x7A, 0xB5, 0x3C, 0x35, 0x01, 0xD0, 0x87, 0x2C, 0x01, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x27)

local expected_response = string.char(0x01, 0x00, 0x00, 0x0B, 0x00, 0x10, 0x00, 0x8B, 0x00, 0x00, 0x25, 0x8A,
                                      0x00, 0x00, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x00, 0x03, 0x00,
                                      0x61, 0x00, 0x00, 0x34, 0x74)

egts.start_server('localhost', 5555)

fiber.create(function ()
        local sock, e = socket.tcp_connect('localhost', 5555)
        if sock ~= nil then
            sock:write(message)
            fiber.sleep(0.1)
            local actual_response = sock:recv(1024);
            if expected_response ~= actual_response then
                print("response not equal")
            end

            sock:close()
        else
            print("client err: " .. e)
        end
end)

fiber.sleep(0.1)

egts.stop_server()
